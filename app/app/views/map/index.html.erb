<style>
  #map {width:100%; height:500px; margin-bottom:40px;}
  #left-nav{height:500px; max-height:500px; overflow-y:scroll;}
  select,input{width:90%}
  .well{width:80%;}
  .hidden{display:none;}
</style>

<div class="row">

<div id="left-nav" class="span3">
  <h2>Filters</h2>

  <label>City</label>
  <select id="input-city">
    <option value="Charlotte">Charlotte</option>
    <option value="Las Vegas">Las Vegas</option>
    <option value="Madison">Madison</option>
    <option value="Montreal">Montreal</option>
    <option value="Phoenix">Phoenix</option>
    <option value="Pittsburgh">Pittsburgh</option>
  </select>

  <br><br>

  <label>Category</label>
  <select id="input-category" multiple="multiple"></select>

  <br><br>
  
  <label>Attribute</label>
  <select id="input-attr" multiple="multiple"></select>

  <br><br>

  <div class="text-center">
    <button id="search-btn" class="btn btn-primary"><i class="fa fa-search"></i> Search</button>
  </div>

  <br>

  <p><a onclick="useCurrentLocation()"><i class="fa fa-map-marker"></i> Current Location</a></p>

  <p><a onclick="toggleHidden('save')"><i class="fa fa-save"></i> Save Search</a></p>
  <div id="save-well" class="well well-small hidden">
    <label>What would you like to name your search?</label>
    <input id="input-save" type="text" placeholder="Untitled"></input>
    <div class="text-center">
      <button id="save-btn" class="btn text-center" onclick="saveSearch()">Save</button>
    </div>
  </div>

  <p><a onclick="toggleHidden('upload')"><i class="fa fa-upload"></i> Load Search</a></p>
  <div id="upload-well" class="well well-small hidden">
    <label>Which search would you like to load?</label>
    <select id="input-upload"></select>
    <div class="text-center">
      <button id="load-btn" class="btn text-center" onclick="loadSearch()">Load</button>
    </div>
  </div>

  <p><a onclick="toggleHidden('history')"><i class="fa fa-history"></i> Recent Searches</a></p>
  <div id="history-well" class="well well-small hidden"></div>

</div>

<div class="span9">
  <div id="map"></div>
</div>

</div> <!-- /.row -->

<script>

/** MAP **/

var results = [];
var map = {};
var heatmapLayer = {};
//var markerLayer = {};
var dataZoom = 11;
var zoomThreshold = 13;

/*
var plotData = function () {
  var arr = [];
  $.each(results, function (index, business) {
    arr.push(
      L.marker([business.latitude, business.longitude], {icon: new L.Icon.Default})
      .bindPopup('<p class="lead">' + business.name + '</p>' +
        '<p>' + business.full_address + '</p>'
      )
    );
  });
  markerLayer = L.layerGroup(arr);
};
*/

var plotHeatData = function () {
  var businesses = {
    max: 1,
    data: results
  };
  heatmapLayer.setData(businesses);
};

var getFormData = function () {
  var formData = {};
  formData.city = $('#input-city').val();
  formData.categories = $('#input-category').val() || [];
  formData.attributes = $('#input-attr').val() || [];
  return formData;
};

var getBusinessData = function () {
  var formData = getFormData();
  //console.log(formData);
  $.getJSON('/businesses.json', formData, function (data) {
    results = data;
    map.setView([results[0].latitude, results[0].longitude], dataZoom);
    plotHeatData();
  });
};

var initMap = function () {

  var baseLayer = L.tileLayer(
    'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',{
      attribution: '&copy; <a href="http://openstreetmap.org">OpenStreetMap</a>',
      maxZoom: 18
    }
  );

  var cfg = {
    "radius": 0.01,
    "maxOpacity": .8, 
    "scaleRadius": true,
    "blur": 0.9,
    "useLocalExtrema": false,
    "latField": 'latitude',
    "lngField": 'longitude',
    "valueField": 'rating'
  };

  heatmapLayer = new HeatmapOverlay(cfg);

  map = new L.Map('map', {
    center: new L.LatLng(39.8282, -98.5795),
    zoom: 4,
    layers: [baseLayer, heatmapLayer]
  });

/*
  map.on('zoomend', function () {
    if (map.getZoom() > zoomThreshold) {
      if (map.hasLayer(heatmapLayer)) map.removeLayer(heatmapLayer);
      if (! map.hasLayer(markerLayer)) {
        //plotData();
        map.addLayer(markerLayer);
      }
    } else {
      if (map.hasLayer(markerLayer)) map.removeLayer(markerLayer);
      if (! map.hasLayer(heatmapLayer)) {
        plotHeatData();
        map.addLayer(heatmapLayer);
      }
    }   
  });
*/

};

var populateFilters = function () {
  $.getJSON('/categories.json', function(data) {
	  $.each(data, function(key, value) {
      $('#input-category').append($('<option>', {
        value: value.category_id,
        text: value.name
	    }));
	  });
	  //$('#input-category').multiselect();
   });
 
  $.getJSON("/zattributes.json", function(data) {
    $.each(data, function(key, value) {   
      $('#input-attr').append($('<option>', {
        value: value.attribute_id,
        text: value.attribute_name
      }));
    });
    //$('#input-attr').multiselect();
  });
};

var useCurrentLocation = function () {
  navigator.geolocation.getCurrentPosition(function (data) {
    var BlueIcon = L.Icon.Default;
    map.setView([data.coords.latitude, data.coords.longitude], dataZoom + 3);
    L.marker([data.coords.latitude, data.coords.longitude], {icon: new L.Icon.Default})
     .addTo(map)
     .bindPopup('<h5>You are here.</h5>')
     .openPopup();
  });
};



/** SAVED SEARCHES **/



var db = {};

db.load = function (key) {
  return JSON.parse(localStorage.getItem(key));
};

db.init = function () {
  var keys = db.load('keys') || [];
  localStorage.setItem('keys', JSON.stringify(keys));
};


db.contains = function (key) {
  return db.load('keys').indexOf(key) !== -1;
};

db.save = function (key, value) {
  if (key === 'keys' || key === 'history') return;
  var keys = db.load('keys');
  if (! db.contains(key)) {
    keys.push(key);
    localStorage.setItem('keys', JSON.stringify(keys));
  }
  localStorage.setItem(key, JSON.stringify(value));
};

db.remove = function (key) {
  var keys = db.load('keys');
  keys.splice(keys.indexOf(key), 1);
  localStorage.setItem('keys', JSON.stringify(keys));
  localStorage.removeItem(key);
};

db.clear = function () {
  localStorage.clear();
  db.init();
};

var toggleHidden = function (str) {
  $('#' + str + '-well').toggleClass('hidden');
};

var loadAllSearches = function () {
  var keys = db.load('keys');
  $('#input-upload').empty();
  $.each(keys, function (key, value) {   
    $('#input-upload').append($('<option>', {'value': value}).text(value)); 
  });
};

var setFormData = function (data) {
  $('#input-city').val(data.city);
  $('#input-category').val(data.categories);
  $('#input-attr').val(data.attributes);
};

var saveSearch = function () {
  var name = $('#input-save').val() || 'Untitled';
  db.save(name, getFormData());
  loadAllSearches();
};

var loadSearch = function () {
  var name = $('#input-upload').val();
  if (! name) return;
  var data = db.load(name);
  setFormData(data);
  getBusinessData();
};

var recentSearches = [];

var searchRecent = function (n) {
  setFormData(recentSearches[n].data);
  getBusinessData();
};

var updateHistory = function () {
  recentSearches.unshift({'timestamp': new Date().toLocaleString(), 'data': getFormData()});
  $('#history-well').empty();
  for (var i = 0; i < 10; i++) {
    if (! recentSearches[i]) return;
    $('#history-well').append('<p><a onclick="searchRecent(' + i + ')">' + recentSearches[i].timestamp + '</a></p>');
  }
};



/** INIT **/



$(document).ready(function() {

  db.init();
  loadAllSearches();

  initMap();
  populateFilters();

  $('#search-btn').click(function() {
    updateHistory();
    getBusinessData();
  });

});

</script>

